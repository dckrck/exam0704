{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\VladB\\\\OneDrive\\\\Desktop\\\\exam0609\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\VladB\\\\OneDrive\\\\Desktop\\\\exam0609\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Rental } from \"./rental.model\";\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var RentalService = /*#__PURE__*/(function () {\n  var RentalService = /*#__PURE__*/function () {\n    function RentalService(httpClient) {\n      _classCallCheck(this, RentalService);\n\n      this.httpClient = httpClient;\n      this.rentalsUrl = 'http://localhost:8080/api/rentals';\n    }\n\n    _createClass(RentalService, [{\n      key: \"getRentals\",\n      value: function getRentals() {\n        return this.httpClient.get(this.rentalsUrl);\n      }\n    }, {\n      key: \"getRental\",\n      value: function getRental(id) {\n        return this.getRentals().pipe(map(function (rentals) {\n          return rentals.find(function (rental) {\n            return rental.id === id;\n          });\n        }));\n      }\n    }, {\n      key: \"update\",\n      value: function update(rental) {\n        var url = \"\".concat(this.rentalsUrl, \"/\").concat(rental.id);\n        return this.httpClient.put(url, rental);\n      }\n    }, {\n      key: \"save\",\n      value: function save(mid, cid) {\n        var url = \"\".concat(this.rentalsUrl);\n        return this.httpClient.post(url, new Rental(mid, cid));\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(rental) {\n        var url = \"\".concat(this.rentalsUrl, \"/\").concat(rental.id);\n        return this.httpClient.delete(url);\n      }\n    }]);\n\n    return RentalService;\n  }();\n\n  RentalService.ɵfac = function RentalService_Factory(t) {\n    return new (t || RentalService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  RentalService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RentalService,\n    factory: RentalService.ɵfac\n  });\n  return RentalService;\n})();","map":null,"metadata":{},"sourceType":"module"}
